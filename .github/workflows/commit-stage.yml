name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: vermankayak/catalog-service
  IMAGE_TAG: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      # ---- Start Config Server ----
      - name: Checkout Config Server repo
        uses: actions/checkout@v4
        with:
          repository: Vermankayak/cloud-native-spring-in-action-config-repo
          path: config-repo

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build Config Server
        working-directory: config-repo
        run: ./gradlew build -x test

      - name: Run Config Server in background
        working-directory: config-repo
        run: |
          nohup java -jar build/libs/*SNAPSHOT.jar --server.port=8888 > config.log 2>&1 &

      - name: Wait for Config Server to be UP
        id: wait_for_config
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8888/actuator/health | grep '"status":"UP"' > /dev/null; then
              echo "Config Server is up!"
              exit 0
            fi
            echo "Waiting for Config Server..."
            sleep 5
          done
          echo "Config Server failed to start"
          exit 1

      - name: Display Config Server logs on failure
        if: failure() && steps.wait_for_config.outcome == 'failure'
        run: |
          echo "--- Displaying Config Server logs ---"
          cat config-repo/config.log     

      # ---- Run catalog-service tests ----
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main'}}
    needs: [build]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage --imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}