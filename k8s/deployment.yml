apiVersion: apps/v1 # The API version of kubernetes API to use, this can be found using command 'kubectl api-versions'
kind: Deployment # The kind of kubernetes object to create
metadata: # The metadata for the deployment
  name: catalog-service # The name of the deployment
  labels:  # The labels for the deployment
    app: catalog-service # The app label with value catalog-service so that we can select it using command 'kubectl get deployments -l app=catalog-service'
spec: # The deployment spec
  replicas: 1 # Number of pod replicas
  selector: # Selector for the pods when selecting them using command 'kubectl get pods -l app=catalog-service'
    matchLabels: # Match the labels of the pods
      app: catalog-service # Match the app label with value catalog-service when selecting the pods using command 'kubectl get pods -l app=catalog-service'

  template: # The pod template
    metadata: # Metadata for the pod
      labels: # Labels for the pod
        app: catalog-service # Label the pod with app=catalog-service so that we can select it using command 'kubectl get pods -l app=catalog-service'
    spec: # The pod spec
      containers:
        - name: catalog-service
          image: catalog-service
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 5"]
          ports:
            - containerPort: 9001
          env:
            - name: BPL_JVM_THREAD_COUNT
              value: "50"
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://polar-postgres:5432/polardb_catalog
            - name: SPRING_CLOUD_CONFIG_URI
              value: http://config-service:80